{"version":3,"file":"static/js/767.aef65404.chunk.js","mappings":"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","sources":["view/pages/register/register.js"],"sourcesContent":["import './register.scss'\r\nimport { useState } from 'react';\r\nimport facebook from '../../../assets/images/Facebook_Logo.png'\r\nimport google from '../../../assets/images/google_logo.png'\r\nimport Background from '../../../assets/images/register-background.jpg'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import \"~antd/dist/antd.css\";\r\nimport { Alert, Space } from 'antd';\r\nfunction Register (){\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const navigate = useNavigate();\r\n    const [err, setErr] = useState([false, false, false])\r\n\r\n\r\n    function handleValidation(e){\r\n        e.preventDefault();\r\n        const sendPostRequest = async () => {\r\n            try {\r\n                const resp = await axios.post('http://localhost:8000/api/auth/register', {\r\n                    email : email,\r\n                    password : password,\r\n                    password2 : password2\r\n                })\r\n                {\r\n                    toast.success('Đăng ký thành công, bạn sẽ chuyển sang trang chính', {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"colored\",\r\n                        });\r\n                }\r\n                setTimeout(function() {\r\n                    navigate('/')\r\n                },2000)\r\n                setEmail('')\r\n                setPassword('')\r\n                setPassword2('')\r\n            }\r\n            catch (e){\r\n                if (e.response.request.status === 400)\r\n                {\r\n                    setErr([true, false, false])\r\n                    setTimeout(()=>{\r\n                        setErr([false, false, false])\r\n                    },2000)\r\n                   \r\n                }\r\n                else if (e.response.request.status === 409)\r\n                {\r\n                    setErr([false,false, true])\r\n                    setTimeout(()=>{\r\n                        setErr([false, false, false])\r\n                    },2000)\r\n                }\r\n            }\r\n        }\r\n        sendPostRequest();\r\n    }\r\n\r\n\r\n    return (\r\n            <div className='register-content' style ={{backgroundImage: `url(${Background})`}}>\r\n                <div className='register-content-left'>\r\n                </div>\r\n                <div className='register-form'>\r\n                    <form onSubmit={handleValidation}>\r\n                        <div className='register-form-header'>\r\n                            Đăng ký\r\n                        </div>\r\n                        <label for= 'email' className='register-label'>Email</label> <br/>\r\n                        <input \r\n                            type = 'text'\r\n                            id = 'email'\r\n                            name = 'email'\r\n                            placeholder='Nhập email'\r\n                            required\r\n                            value = {email}\r\n                            className='register-input'\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            autoComplete= \"off\"\r\n                        />\r\n                       \r\n                       {err[0] && <p style = {{fontSize: '14px', color : 'red'}} >Email không đúng định dạng</p>}\r\n\r\n                        <br/>\r\n                        <label for= 'password' className='register-label'>Mật khẩu</label> <br/>\r\n                        <input \r\n                            type = 'password'\r\n                            id = 'password'\r\n                            name = 'password'\r\n                            placeholder='Nhập mật khẩu'\r\n                            required\r\n                            value = {password}\r\n                            className='register-input'\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            autoComplete= \"off\"\r\n\r\n                        />\r\n\r\n\r\n                        <br/>\r\n                        <label for= 'confirm_password' className='register-label'>Nhập lại mật khẩu</label><br/>\r\n                        <input \r\n                            type = 'password'\r\n                            id = 'confirm_password'\r\n                            name = 'confirm_password'\r\n                            placeholder='Nhập lại mật khẩu'\r\n                            required\r\n                            value = {password2}\r\n                             className='register-input'\r\n                            onChange={(e) => setPassword2(e.target.value)}\r\n                            autoComplete= \"off\"\r\n\r\n                        />\r\n\r\n                        {err[2] && <p style = {{fontSize: '14px', color : 'red'}}>Mật khẩu nhập lại không đúng</p>}\r\n\r\n                        <br/>\r\n                        <button className='register-btn'>\r\n                            TIẾP THEO\r\n                        </button>\r\n                        <ToastContainer/>\r\n                        <div className='register-form-footer'>\r\n                            <div className='register-footer-top'>\r\n                                    <div className='register-line'></div>\r\n                                    <div className='register-line-des'>HOẶC</div>\r\n                                     <div className='register-line'></div>\r\n                            </div>\r\n                            <div className='register-footer-icon'>\r\n                               <button className='register-footer-btn'>\r\n                               <img src={facebook}  alt='anh'  className='register-footer-img'/>\r\n                                    Facebook\r\n                               </button>\r\n                               <button className='register-footer-btn'>\r\n                               <img src={google}  alt='anh'  className='register-footer-img'/>\r\n                                    Google\r\n                               </button>\r\n                                \r\n                            </div>\r\n                            <p className='register-footer-des'>\r\n                            Bằng việc đăng kí, bạn đã đồng ý với Shopee về <br/>\r\n                                <a href='' className='register-link'>Điều khoản và dịch vụ</a>\r\n                                           <span> & </span> \r\n                                <a href='' className='register-link'>Chính sách bảo mật</a>\r\n                            </p>\r\n                            <p className='register-login'>\r\n                                <span style = {{color : '#ccc'}}>Bạn đã có tài khoản? </span> \r\n                                <Link to = '/login' className='register-link'>Đăng nhập</Link>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Register"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","password2","setPassword2","navigate","useNavigate","_useState7","_useState8","err","setErr","_jsxs","className","style","backgroundImage","concat","Background","children","_jsx","onSubmit","e","preventDefault","sendPostRequest","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","post","sent","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","t0","response","request","status","stop","apply","arguments","for","type","id","name","placeholder","required","value","onChange","target","autoComplete","fontSize","color","ToastContainer","src","facebook","alt","google","href","Link","to"],"sourceRoot":""}